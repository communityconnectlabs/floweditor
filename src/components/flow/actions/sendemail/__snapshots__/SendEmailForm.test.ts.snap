// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendEmailForm render should render 1`] = `
<Dialog
  buttons={
    Object {
      "primary": Object {
        "name": "Ok",
        "onClick": [Function],
      },
      "secondary": Object {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="send_email"
  tabs={
    Array [
      Object {
        "body": <React.Fragment>
          <p>
            Add up to 3 attachments to each message. Each attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.
          </p>
          <p>
            Warning: The combined size of all attachments should not exceed 25MB. If you need to send larger files, we suggest sending links to those files in the body of the email.
          </p>
          <div
            className="url_attachment"
          >
            <div
              className="type_choice"
            >
              <SelectElement
                entry={
                  Object {
                    "value": null,
                  }
                }
                name="Type Options"
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "name": "File URL",
                      "value": "image",
                    },
                    Object {
                      "name": "Upload Attachment",
                      "value": "upload",
                    },
                  ]
                }
                placeholder="Add Attachment"
                styles={
                  Object {
                    "control": [Function],
                    "indicatorsContainer": [Function],
                    "input": [Function],
                    "menuList": [Function],
                    "option": [Function],
                    "singleValue": [Function],
                    "valueContainer": [Function],
                  }
                }
              />
            </div>
          </div>
          <React.Fragment />
          <input
            onChange={[Function]}
            style={
              Object {
                "display": "none",
              }
            }
            type="file"
          />
        </React.Fragment>,
        "checked": false,
        "hasErrors": true,
        "name": "Attachments",
      },
    ]
  }
  title="Send Email"
>
  <TypeList
    __className=""
    initialType={
      Object {
        "component": [Function],
        "description": "Send an email",
        "form": [Function],
        "localization": [Function],
        "localizeableKeys": Array [
          "subject",
          "body",
        ],
        "name": "Send Email",
        "type": "send_email",
        "visibility": Array [
          "messaging",
          "voice",
        ],
      }
    }
    onChange={[MockFunction]}
  />
  <div
    className="ele"
  >
    <TaggingElement
      createPrompt=""
      entry={
        Object {
          "value": Array [
            "jane@example.com",
          ],
        }
      }
      name="Recipient"
      onChange={[Function]}
      onCheckValid={[Function]}
      placeholder="To"
      prompt="Enter email address"
    />
    <TextInputElement
      __className="subject"
      autocomplete={true}
      entry={
        Object {
          "value": "New Sign Up",
        }
      }
      name="Subject"
      onChange={[Function]}
      placeholder="Subject"
    />
    <TextInputElement
      __className="message"
      autocomplete={true}
      entry={
        Object {
          "value": "@run.results.name just signed up.",
        }
      }
      name="Message"
      onChange={[Function]}
      showLabel={false}
      textarea={true}
    />
  </div>
</Dialog>
`;

exports[`SendEmailForm updates should allow switching from router 1`] = `undefined`;

exports[`SendEmailForm updates should save changes 1`] = `
Object {
  "attachments": Array [],
  "body": Object {
    "validationFailures": Array [],
    "value": "What is a group of tigers called?",
  },
  "recipients": Object {
    "validationFailures": Array [],
    "value": Array [
      "joe@domain.com",
      "jane@domain.com",
    ],
  },
  "subject": Object {
    "validationFailures": Array [],
    "value": "URGENT: I have a question",
  },
  "valid": true,
}
`;

exports[`SendEmailForm updates should save changes 2`] = `
Array [
  Object {
    "addresses": Array [
      "joe@domain.com",
      "jane@domain.com",
    ],
    "attachments": Array [],
    "body": "What is a group of tigers called?",
    "subject": "URGENT: I have a question",
    "type": "send_email",
    "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
  },
]
`;
